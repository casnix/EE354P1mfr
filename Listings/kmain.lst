C51 COMPILER V9.59.0.0   KMAIN                                                             10/10/2018 14:44:02 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE KMAIN
OBJECT MODULE PLACED IN .\Objects\kmain.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE kmain.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\kma
                    -in.lst) TABS(2) OBJECT(.\Objects\kmain.obj)

line level    source

   1          // Matt Rienzo, kmain.c 9/28/2018
   2          // Last modified 10/10/2018
   3          
   4          #include "./include/c/Registers.h"
   5          #include "./include/c/Types.h"
   6          #include "./include/c/kthreads.h"
   7          
   8          #pragma NOREGPARMS
   9          
  10          //
  11          // External references
  12          extern void __setup(void);
  13          //
  14          //
  15          
  16          //
  17          // Function prototypes
  18          void main(void);  // This memory structure gets destroyed, and it's kind of hackish
  19                            // but Keil C51 just absolutely insists that a C function called main() be placed at 
  20                            // 0x0000, disallowing me from setting up memory my way first.
  21          void _kmain(void);
  22          void dummyCodePath();
  23          //
  24          //
  25          
  26          void main(){
  27   1        __setup();
  28   1        //kmain(); // This will not ever run, but BL51 will not overlay memory for kmain() if it's only called fr
             -om assembly...
  29   1        dummyCodePath();
  30   1      }
  31          
  32          void _kmain(){
  33   1        // Set up 
  34   1        
  35   1        
  36   1        // THis is just filler for one debug
  37   1        sp = 0x30;
  38   1      }
  39          
  40          /// -- keep at bottom of page
  41          void dummyCodePath(void){
  42   1        _kmain();
  43   1        kthreads_compile_init();
  44   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     22    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.59.0.0   KMAIN                                                             10/10/2018 14:44:02 PAGE 2   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
