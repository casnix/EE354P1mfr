A51 MACRO ASSEMBLER  HILSTRAPPER                                                          08/29/2018 16:45:30 PAGE     1


MACRO ASSEMBLER A51 V8.2.7.0
OBJECT MODULE PLACED IN .\Objects\HILStrapper.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE HILStrapper.asm SET(SMALL) DEBUG PRINT(.\Listings\HILStrapper.lst) OBJE
                      CT(.\Objects\HILStrapper.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     ; Matt Rienzo, HILStrapper.inc 8/25/2018
                       2     
                       3     ;#include "./include/asm/Registers.inc"
                +1     4     ; Matt Rienzo, Registers.inc 8/25/2018
                +1     5     
                +1     6     ;-- Alias/enumeration of registers and banks
  0000          +1     7     a0      equ     0
  0001          +1     8     a1      equ     1
  0002          +1     9     a2      equ     2
  0003          +1    10     a3      equ     3
  0004          +1    11     a4      equ     4
  0005          +1    12     a5      equ     5
  0006          +1    13     a6      equ     6
  0007          +1    14     a7      equ     7
  0008          +1    15     b0      equ     8
  0009          +1    16     b1      equ     9
  000A          +1    17     b2      equ     10
  000B          +1    18     b3      equ     11
  000C          +1    19     b4      equ     12
  000D          +1    20     b5      equ     13
  000E          +1    21     b6      equ     14
  000F          +1    22     b7      equ     15
  0010          +1    23     c0      equ     16
  0011          +1    24     c1      equ     17
  0012          +1    25     c2      equ     18
  0013          +1    26     c3      equ     19
  0014          +1    27     c4      equ     20
  0015          +1    28     c5      equ     21
  0016          +1    29     c6      equ     22
  0017          +1    30     c7      equ     23
                +1    31     
                +1    32     ;-- SFRs
                +1    33     ;sp  equ 0x81
                +1    34     ;acc equ 0xe0
  00F0          +1    35     bcc equ 0xf0
                +1    36     ;psw equ 0xd0
                      37     
                      38     ;#include "./include/asm/ShortStack.inc"
                +1    39     ; Matt Rienzo, ShortStack.inc 8/25/2018
                +1    40     
                +1    41     ; The following registers I am reserving for short stack operations
  0018          +1    42     s0      equ     0x18
  0019          +1    43     s1      equ     0x19
  001A          +1    44     s2      equ     0x1a
  001B          +1    45     s3      equ 0x1b
  001C          +1    46     s4      equ     0x1c
  001D          +1    47     s5      equ     0x1d
  001E          +1    48     s6      equ     0x1e
  001F          +1    49     s7      equ     0x1f
                +1    50     
                +1    51     
                +1    52     ; SHORT STACK -- see the Short Stack section after the END instruction for an explanation
                +1    53     ;  of what this is
                +1    54     ; Short stack address "register" and short stack size "register"
  0020          +1    55     ss      equ     0x20    ; short stack 0 address
  0021          +1    56     ssz     equ 0x21        ; short stack size (index)
  0022          +1    57     msz     equ     0x22    ; short stack max size (to avoid overflow, but with stack wrapping/
A51 MACRO ASSEMBLER  HILSTRAPPER                                                          08/29/2018 16:45:30 PAGE     2

                             overwrites)
                      58     
                      59     ;#include "./include/asm/ADC.inc"
                +1    60     ; ------------- READS51 generated header -------------- 
                +1    61     ; module  : Y:\Development\8051\Bootstrapper\Bootstrapper\ADC.inc
                +1    62     ; created : 11:09:44, Monday, August 27, 2018
                +1    63     ; ----------------------------------------------------- 
                +1    64     
                +1    65     ; Matt Rienzo, ADC.inc 8/27/2018
                +1    66     
                +1    67     ; Direct memory addressing
  00F3          +1    68     adcon       equ 0xf3
  00F6          +1    69     adcf        equ 0xf6
  00F2          +1    70     adclk       equ 0xf2
  00F5          +1    71     addh        equ 0xf5
  00F4          +1    72     addl        equ 0xf4
                      73     
                      74     ;#include "./include/asm/InterruptController.inc"
                +1    75     ; ------------- READS51 generated header -------------- 
                +1    76     ; module  : Y:\Development\8051\Bootstrapper\Bootstrapper\InterruptController.inc
                +1    77     ; created : 11:26:26, Monday, August 27, 2018
                +1    78     ; ----------------------------------------------------- 
                +1    79     
                +1    80     ; Matt Rienzo, InterruptController.inc
                +1    81     
  00A8          +1    82     ien0    equ 0xa8
  00E8          +1    83     ien1    equ 0xe8
  00B8          +1    84     ipl0    equ 0xb8
  00B7          +1    85     iph0    equ 0xb7
  00F8          +1    86     ipl1    equ 0xf8
  00F7          +1    87     iph1    equ 0xf7
                +1    88     
                +1    89     raisEA          macro
                +1    90             orl             ien0,   #0x80
                +1    91     endm
                +1    92     
                +1    93     lowEA           macro
                +1    94             anl     ien0,   #0x7f
                +1    95     endm
                      96     
                      97     ;#include "./include/asm/MacroLang.inc"
                +1    98     ; Matt Rienzo, MacroLang.inc 8/25/2018
                +1    99     sspush          macro   x
                +1   100             push    x
                +1   101             lcall   __sspush
                +1   102     endm
                +1   103     
                +1   104     sspop           macro   x
                +1   105             lcall   __sspop
                +1   106             pop             x
                +1   107     endm
                +1   108     
                +1   109     sspushl         macro   N
                +1   110             mov             s0,             N
                +1   111             push    s0
                +1   112             lcall   __sspush
                +1   113     endm
                     114     
                     115     
                     116     ;#define OPTIMIZE
                     117     
                     118     
                     119     HIL             segment code
                     120             
                     121     public  __HIL_init
                     122     
A51 MACRO ASSEMBLER  HILSTRAPPER                                                          08/29/2018 16:45:30 PAGE     3

                     123     public  __HIL_C_test
                     124     
----                 125     rseg    HIL
                     126         extrn  code    (__sspop)
                     127         extrn  code    (__sspush)
                     128         ; __HIL_init : initializes hardware components, and defines functions/callbacks for har
                             dware
                     129         ;   manipulate by the HAL.
                     130         ; args: none
                     131         ; rets: SS(#retval) -- Immediate byte off short stack to tell __entry whether or not we
                              failed.
0000                 132             __HIL_init:
                     133             ; 1) Check battery voltage
0000 1100     F      134             acall   __HIL_enable_ADC
                     135             lowEA                               ; Disable interrupts for while we check devices
                              on ADC
                     137             sspushl #0x00                      ; Channel byte for ADC/Battery voltage
000D 1100     F      141             acall   __HIL_select_ADCCh
000F 1100     F      142             acall   __HIL_enable_ADCCollect     ; Enable ADC collection on the channel for the 
                             battery
0011 1100     F      143             acall   __HIL_check_batt_voltage    ; Check battery voltage
                     144             sspop   acc
0018 B4004B          147             cjne    a,          #0x00,  HIL_init_fail
                     148             
                     149             ; 2) Turn on accelerometer
                     150     
                     151     
                     152     
                     153         ; __HIL_enable_ADC : Turns on and resets ADC
                     154         ; args: none
                     155         ; rets: none
001B                 156         __HIL_enable_ADC:
                     157             ; 1) Turn on ADC.
001B 75F600          158             mov     adcf,       #0x00   ; reset
001E 75F601          159             mov     adcf,       #0x01
0021 75F320          160             mov     adcon,      #0x20
0024 75F200          161             mov     adclk,      #0x00
                     162     
0027 85F617          163             mov     c7,         adcf
002A 85F316          164             mov     c6,         adcon
002D 85F215          165             mov     c5,         adclk
                     166     
0030 22              167             ret
                     168     
                     169         ; __HIL_select_ADCCh : Selects the active ADC channel
                     170         ; args: SS(#channel)    -- byte on short stack
                     171         ; rets: none
0031                 172         __HIL_select_ADCCh:
                     173             ; battery voltage/division will be routed to ADC channel 0
0031 53F3F8          174             anl     adcon,      #0xf8   ; Reset ADC channel selection
0034 43F300          175             orl     adcon,      #0x00   ; Select channel 0
0037 43F320          176             orl     adcon,      #0x20   ; Select standard mode
003A 22              177             ret
                     178     
                     179         ; __HIL_enable_ADCCollect : Enables ADC collection on selected channel
                     180         ; args: none
                     181         ; rets: none
003B                 182         __HIL_enable_ADCCollect:
                     183             ; Start the ADC collection
003B 43F308          184             orl     adcon,      #0x08   ; Enable ADC collectors
003E 22              185             ret
                     186     
                     187         ; __HIL_check_batt_voltage : Checks the battery voltage
                     188         ; args: none
                     189         ; rets: SS(#retval)     -- byte 0x00 for success, 0xff for fail
003F                 190         __HIL_check_batt_voltage:
A51 MACRO ASSEMBLER  HILSTRAPPER                                                          08/29/2018 16:45:30 PAGE     4

003F C0E0            191             push    acc
0041                 192         hsWdbADCON:
0041 E5F3            193             mov     a,          adcon
0043 5510            194             anl     a,          0x10
0045 B510F9          195             cjne    a,          0x10,   hsWdbADCON
                     196     
                     197             ; Voltage check
                     198     
                     199     
0048 C0F0            200             push    bcc
                     201     
004A 74FF            202             mov     a,          #0xff
004C 7400            203             mov     a,          #0x00
004E 74FF            204             mov     a,          #0xff
                     205     
                             
                                             
                                     
                                     
                                     
                             
                                     
                                     
                                     
                                     
                                 
                                     
                                     
                                     
                                     
                                     
                                     
                                     
                             
0050 D0F0            225             pop     bcc
0052 D0E0            226             pop     acc
                     227             sspushl #0x00
005C 22              231             ret
                     232     
                     233         ; __HIL_disable_batterylo : Turns on BATT_LOW led, and red square.
                     234         ; args: none
                     235         ; rets: SS(#0xff)
005D                 236         __HIL_disable_batterylo:
                     237             ; Turn on battery low light
                     238             ; Turn on red square
                     239             sspushl #0xff
0065 22              243             ret
                     244     
                     245     
                     246             
                     247             ; 3) Turn on accelerometer
                     248             ; 4) Switch interrupts?
                     249             ; 5) Return success
                     250             ; Handler for turning on LEDs
                     251             ; Handler for LED array
                     252             ; Handler for power touch button
                     253             ; Handler for battery power measuring
                     254             ; Handler for accelerometer
                     255             ; Handler for vibration motor
                     256             
0066                 257             HIL_init_fail:
                     258             sspushl #0xff
006E 22              262             ret
                     263             
                     264     
006F                 265     __HIL_C_test:
A51 MACRO ASSEMBLER  HILSTRAPPER                                                          08/29/2018 16:45:30 PAGE     5

006F 7507E4          266             mov             a7,             #0xe4
                     267                     ; Order of operation:
0072 22              268                     ret
                     269     
                     270                     
                     271                     
                     272     end
A51 MACRO ASSEMBLER  HILSTRAPPER                                                          08/29/2018 16:45:30 PAGE     6

SYMBOL TABLE LISTING
------ ----- -------


N A M E                   T Y P E  V A L U E   ATTRIBUTES

A0 . . . . . . . . . . .  N NUMB   0000H   A   
A1 . . . . . . . . . . .  N NUMB   0001H   A   
A2 . . . . . . . . . . .  N NUMB   0002H   A   
A3 . . . . . . . . . . .  N NUMB   0003H   A   
A4 . . . . . . . . . . .  N NUMB   0004H   A   
A5 . . . . . . . . . . .  N NUMB   0005H   A   
A6 . . . . . . . . . . .  N NUMB   0006H   A   
A7 . . . . . . . . . . .  N NUMB   0007H   A   
ACC. . . . . . . . . . .  D ADDR   00E0H   A   
ADCF . . . . . . . . . .  N NUMB   00F6H   A   
ADCLK. . . . . . . . . .  N NUMB   00F2H   A   
ADCON. . . . . . . . . .  N NUMB   00F3H   A   
ADDH . . . . . . . . . .  N NUMB   00F5H   A   
ADDL . . . . . . . . . .  N NUMB   00F4H   A   
B0 . . . . . . . . . . .  N NUMB   0008H   A   
B1 . . . . . . . . . . .  N NUMB   0009H   A   
B2 . . . . . . . . . . .  N NUMB   000AH   A   
B3 . . . . . . . . . . .  N NUMB   000BH   A   
B4 . . . . . . . . . . .  N NUMB   000CH   A   
B5 . . . . . . . . . . .  N NUMB   000DH   A   
B6 . . . . . . . . . . .  N NUMB   000EH   A   
B7 . . . . . . . . . . .  N NUMB   000FH   A   
BCC. . . . . . . . . . .  N NUMB   00F0H   A   
C0 . . . . . . . . . . .  N NUMB   0010H   A   
C1 . . . . . . . . . . .  N NUMB   0011H   A   
C2 . . . . . . . . . . .  N NUMB   0012H   A   
C3 . . . . . . . . . . .  N NUMB   0013H   A   
C4 . . . . . . . . . . .  N NUMB   0014H   A   
C5 . . . . . . . . . . .  N NUMB   0015H   A   
C6 . . . . . . . . . . .  N NUMB   0016H   A   
C7 . . . . . . . . . . .  N NUMB   0017H   A   
HIL. . . . . . . . . . .  C SEG    0073H       REL=UNIT
HIL_INIT_FAIL. . . . . .  C ADDR   0066H   R   SEG=HIL
HSWDBADCON . . . . . . .  C ADDR   0041H   R   SEG=HIL
IEN0 . . . . . . . . . .  N NUMB   00A8H   A   
IEN1 . . . . . . . . . .  N NUMB   00E8H   A   
IPH0 . . . . . . . . . .  N NUMB   00B7H   A   
IPH1 . . . . . . . . . .  N NUMB   00F7H   A   
IPL0 . . . . . . . . . .  N NUMB   00B8H   A   
IPL1 . . . . . . . . . .  N NUMB   00F8H   A   
MSZ. . . . . . . . . . .  N NUMB   0022H   A   
S0 . . . . . . . . . . .  N NUMB   0018H   A   
S1 . . . . . . . . . . .  N NUMB   0019H   A   
S2 . . . . . . . . . . .  N NUMB   001AH   A   
S3 . . . . . . . . . . .  N NUMB   001BH   A   
S4 . . . . . . . . . . .  N NUMB   001CH   A   
S5 . . . . . . . . . . .  N NUMB   001DH   A   
S6 . . . . . . . . . . .  N NUMB   001EH   A   
S7 . . . . . . . . . . .  N NUMB   001FH   A   
SS . . . . . . . . . . .  N NUMB   0020H   A   
SSZ. . . . . . . . . . .  N NUMB   0021H   A   
__HIL_CHECK_BATT_VOLTAGE  C ADDR   003FH   R   SEG=HIL
__HIL_C_TEST . . . . . .  C ADDR   006FH   R   SEG=HIL
__HIL_DISABLE_BATTERYLO.  C ADDR   005DH   R   SEG=HIL
__HIL_ENABLE_ADC . . . .  C ADDR   001BH   R   SEG=HIL
__HIL_ENABLE_ADCCOLLECT.  C ADDR   003BH   R   SEG=HIL
__HIL_INIT . . . . . . .  C ADDR   0000H   R   SEG=HIL
__HIL_SELECT_ADCCH . . .  C ADDR   0031H   R   SEG=HIL
__SSPOP. . . . . . . . .  C ADDR   -----       EXT
__SSPUSH . . . . . . . .  C ADDR   -----       EXT
A51 MACRO ASSEMBLER  HILSTRAPPER                                                          08/29/2018 16:45:30 PAGE     7



REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
