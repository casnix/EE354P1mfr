Y:\Development\8051\Bootstrapper\Bootstrapper\CFuncTest.xsf 
C:\Program Files (x86)\Rigel\Reads51\Include\pcx51.inc 
       2       3   00000                  
       3       4   00000                  extern code  __add12
       4       5   00000                  extern code  __add21
       5       6   00000                  extern code  __add1n
       6       7   00000                  extern code  __sub12
       7       8   00000                  extern code  __and12
       8       9   00000                  extern code  __or12
       9      10   00000                  extern code  __incwp
      10      11   00000                  extern code  __addsp
      11      12   00000                  extern code  __getb1p
      12      13   00000                  extern code  __getb1p0
      13      14   00000                  extern code  __getb1pu
      14      15   00000                  extern code  __getb1pu0
      15      16   00000                  extern code  __getb1s
      16      17   00000                  extern code  __getb1s0
      17      18   00000                  extern code  __getb1su
      18      19   00000                  extern code  __getb1su0
      19      20   00000                  extern code  __getb2s
      20      21   00000                  extern code  __getb2s0
      21      22   00000                  extern code  __getb2su
      22      23   00000                  extern code  __getb2su0
      23      24   00000                  extern code  __getw1m
      24      25   00000                  extern code  __getw1p0
      25      26   00000                  extern code  __getw1p
      26      27   00000                  extern code  __getw1s0
      27      28   00000                  extern code  __getw1s
      28      29   00000                  extern code  __getw2m
      29      30   00000                  extern code  __getw2p
      30      31   00000                  extern code  __getw2s
      31      32   00000                  extern code  __putwp1
      32      33   00000                  extern code  __point1s
      33      34   00000                  extern code  __point2s
      34      35   00000                  extern code  __ne12
      35      36   00000                  extern code  __ge12
      36      37   00000                  extern code  __gt12
      37      38   00000                  extern code  __uge12
      38      39   00000                  extern code  __ugt12
      39      40   00000                  extern code  __pushm     ; not used
      40      41   00000                  extern code  __pushp
      41      42   00000                  extern code  __pushp0
      42      43   00000                  extern code  __pushs
      43      44   00000                  extern code  __push2     ; not used
      44      45   00000                  extern code  __enterisr
      45      46   00000                  extern code  __enter
      46      47   00000                  extern code  __return
      47      48   00000                  extern code  __returnisr
      48      49   00000                  extern code  __return_n
      49      50   00000                  extern code  __switch
      50      51   00000                  extern code  __lneg1
      51      52   00000                  extern code  __eq12
      52      53   00000                  extern code  __lt12
      53      54   00000                  extern code  __le12
      54      55   00000                  extern code  __ult12
      55      56   00000                  extern code  __ule12
      56      57   00000                  extern code  __neg1
      57      58   00000                  extern code  __rinc1
      58      59   00000                  extern code  __rdec1
      59      60   00000                  extern code  __asl12
      60      61   00000                  extern code  __asr12
      61      62   00000                  extern code  __udiv12
      62      63   00000                  extern code  __umul12
      63      64   00000                  extern code  __mul12
      64      65   00000                  extern code  __div12
      65      66   00000                  extern code  __mod12
      66      67   00000                  extern code  __push1
      67      68   00000                  extern code  __pop2
      68      69   00000                  extern code  __pushab
      69      70   00000                  extern code  __swap12
      70      71   00000                  extern code  _ccargc
      71      72   00000                  
      72      73   00000                  extern code  __pushp
      73      74   00000                  extern code  __pushs0
      74      75   00000                  extern code  __dbl1
      75      76   00000                  extern code  __putwm1
      76      77   00000                  extern code  __prtocarry
      77      78   00000                  extern code  __putw1s0
      78      79   00000                  extern code  __putw1s
      79      80   00000                  extern code  __putb1s0
      80      81   00000                  extern code  __putb1s
      81      82   00000                  
      82      83   00000                  extern code  __call1  ; not used
      83      84   00000                  extern code  __umod12 ; not implemented
      84      85   00000                  extern code  __debug  ; conditional use
      85      87   00000                  
      86      88   00000                  
C:\Program Files (x86)\Rigel\Reads51\Include\Rc51Regs.inc 
      88       3   00000                  
      89       5   00000                  
      90       6   00000                  PRL        data    0x00
      91       7   00000                  PRH        data    0x01
      92       8   00000                  SRL        data    0x02
      93       9   00000                  SRH        data    0x03
      94      10   00000                  
      95      11   00000                  MDL        data    0x04
      96      12   00000                  MDH        data    0x05
      97      13   00000                  CNT        data    0x06
      98      15   00000                  MODFLAGREG data    0x07
      99      16   00000                  
     100      17   00000                  SPL        data    0x08
     101      18   00000                  SPH        data    0x09
     102      19   00000                  BPL        data    0x0A
     103      20   00000                  BPH        data    0x0B
     104      21   00000                  
     105      22   00000                  ARGCNT     data    0x0C
     106      23   00000                  
     107      24   00000                  ; --- 8051 registers ---
     108      25   00000                  ACC        data    0xE0
     109      26   00000                  B          data    0xF0
     110      27   00000                  DPH        data    0x83
     111      28   00000                  DPL        data    0x82
     112      29   00000                  IE         data    0xA8
     113      30   00000                  IP         data    0xB8
     114      31   00000                  P0         data    0x80
     115      32   00000                  P1         data    0x90
     116      33   00000                  P2         data    0xA0
     117      34   00000                  P3         data    0xB0
     118      35   00000                  PCON       data    0x87
     119      36   00000                  PSW        data    0xD0
     120      37   00000                  SBUF       data    0x99
     121      38   00000                  SCON       data    0x98
     122      39   00000                  SP         data    0x81
     123      40   00000                  TCON       data    0x88
     124      41   00000                  TH0        data    0x8C
     125      42   00000                  TH1        data    0x8D
     126      43   00000                  TL0        data    0x8A
     127      44   00000                  TL1        data    0x8B
     128      45   00000                  TMOD       data    0x89
     129      46   00000                  
     130      47   00000                  ; --- 8051 register bit fields ---
     131      48   00000                  ; IE
     132      49   00000                  EA         bit     0xAF
     133      50   00000                  ES         bit     0xAC
     134      51   00000                  ET1        bit     0xAB
     135      52   00000                  EX1        bit     0xAA
     136      53   00000                  ET0        bit     0xA9
     137      54   00000                  EX0        bit     0xA8
     138      55   00000                  ; IP
     139      56   00000                  PS         bit     0xBC
     140      57   00000                  PT1        bit     0xBB
     141      58   00000                  PX1        bit     0xBA
     142      59   00000                  PT0        bit     0xB9
     143      60   00000                  PX0        bit     0xB8
     144      61   00000                  ; P3
     145      62   00000                  RD         bit     0xB7
     146      63   00000                  WR         bit     0xB6
     147      64   00000                  T1         bit     0xB5
     148      65   00000                  T0         bit     0xB4
     149      66   00000                  INT1       bit     0xB3
     150      67   00000                  INT0       bit     0xB2
     151      68   00000                  TXD        bit     0xB1
     152      69   00000                  RXD        bit     0xB0
     153      70   00000                  ; PSW
     154      71   00000                  CY         bit     0xD7
     155      72   00000                  AC         bit     0xD6
     156      73   00000                  F0         bit     0xD5
     157      74   00000                  RS1        bit     0xD4
     158      75   00000                  RS0        bit     0xD3
     159      76   00000                  OV         bit     0xD2
     160      77   00000                  P          bit     0xD0
     161      78   00000                  ; TCON
     162      79   00000                  TF1        bit     0x8F
     163      80   00000                  TR1        bit     0x8E
     164      81   00000                  TF0        bit     0x8D
     165      82   00000                  TR0        bit     0x8C
     166      83   00000                  IE1        bit     0x8B
     167      84   00000                  IT1        bit     0x8A
     168      85   00000                  IE0        bit     0x89
     169      86   00000                  IT0        bit     0x88
     170      87   00000                  ; SCON
     171      88   00000                  SM0        bit     0x9F
     172      89   00000                  SM1        bit     0x9E
     173      90   00000                  SM2        bit     0x9D
     174      91   00000                  REN        bit     0x9C
     175      92   00000                  TB8        bit     0x9B
     176      93   00000                  RB8        bit     0x9A
     177      94   00000                  TI         bit     0x99
     178      95   00000                  RI         bit     0x98
     179      96   00000                  
     180      97   00000                  ; macros to access the function argument stack in assembly
     181     104   00000                  
     182     107   00000                  
     183     114   00000                  
     184     115   00000                  
     185       3   00000                  C0Seg     segment code
     186       4   00000                  CodeSeg   segment code
     187       5   00000                  XDataSeg  segment xdata
     188       6   00000                  
     189       7   00000                  ; --- external and public functions ---
     190       8   00000                  public            _increment
     191       9   00000                  public            _Cmain
     192      10   00000                  
     193      11   00000                  ; --- external and public variables ---
     194      12   00000                  
     195      13   00000                                                          ; #line 1 // ------------- READS51 generated header --------------
     196      14   00000                                                          ; #line 2 // module  : Y:\Development\8051\Bootstrapper\Bootstrapper\CFuncTest.c
     197      15   00000                                                          ; #line 3 // created : 15:00:18, Sunday, August 26, 2018
     198      16   00000                                                          ; #line 4 // -----------------------------------------------------
     199      17   00000                                                          ; #line 5
     200      18   00000                                                          ; #line 6 // Matt Rienzo, CFuncTest.c 8/25/2018
     201      19   00000                                                          ; #line 7
     202      20   00000                                                          ; #line 8
     203      21   00000                                                          ; #line 9
     204      22   00000                                                          ; #line 10 char increment(char i);
     205      23   00000                                                          ; #line 11
     206      24   00000                                                          ; #line 12 char Cmain(char in){
     207      25   00000                                                          ; -----------------------------------------------
     208      26   00000                            rseg    CodeSeg               ; CHGSEG(2)
     209      27   00000                  _Cmain:                                 ; DECLPUBm(Cmain)
     210      28   00000 D0F0                       pop     b                     ; ENTER
     211      29   00002 D0E0                       pop     acc
     212      30   00004 120000                     lcall   __enter
                         0000220840      
     213      31   00007                                                          ; #line 13     in =increment(in);
     214      32   00007                                                          ; -----------------------------------------------
     215      33   00007 74FA                       mov     a, #0xFA              ; GETb1s(-6)
     216      34   00009 75F0FF                     mov     b, #0xFF
     217      35   0000C 120000                     lcall   __getb1s
                         0000320840      
     218      36   0000F 120000                     lcall   __push1               ; PUSH1
                         00002E0840      
     219      37   00012 750C01                     mov     ARGCNT, #0x01         ; ARGCNTn(1)
     220      38   00015 120033                     lcall   _increment            ; CALLm(_increment)
                         0033020040      
     221      39   00018 74FE                       mov     a, #0xFE              ; ADDSP(-2)
     222      40   0001A 75F0FF                     mov     b, #0xFF
     223      41   0001D 120000                     lcall   __addsp
                         0000460840      
     224      42   00020 74FA                       mov     a, #0xFA              ; PUTb1s(-6)
     225      43   00022 75F0FF                     mov     b, #0xFF
     226      44   00025 120000                     lcall   __putb1s
                         00004A0840      
     227      45   00028                                                          ; #line 14     return in;
     228      46   00028                                                          ; -----------------------------------------------
     229      47   00028 74FA                       mov     a, #0xFA              ; GETb1s(-6)
     230      48   0002A 75F0FF                     mov     b, #0xFF
     231      49   0002D 120000                     lcall   __getb1s
                         0000320840      
     232      50   00030                                                          ; -----------------------------------------------
     233      51   00030 120000                     lcall   __return              ; RETURN(0)
                         0000480840      
     234      52   00033                                                          ; #line 15 }
     235      53   00033                                                          ; #line 16
     236      54   00033                                                          ; #line 17 char increment(char i){
     237      55   00033                                                          ; -----------------------------------------------
     238      56   00033                  _increment:                             ; DECLPUBm(increment)
     239      57   00033 D0F0                       pop     b                     ; ENTER
     240      58   00035 D0E0                       pop     acc
     241      59   00037 120000                     lcall   __enter
                         0000220840      
     242      60   0003A                                                          ; #line 18     i++;
     243      61   0003A                                                          ; -----------------------------------------------
     244      62   0003A 74FA                       mov     a, #0xFA              ; POINT2s(-6)
     245      63   0003C 75F0FF                     mov     b, #0xFF
     246      64   0003F 120000                     lcall   __point2s
                         0000090840      
     247      65   00042 850282                     mov     dpl, SRL              ; INCbp
     248      66   00045 850383                     mov     dph, SRH
     249      67   00048 E0                         movx    a, @dptr
     250      68   00049 2401                       add     a, #1
     251      69   0004B F0                         movx    @dptr, a
     252      70   0004C                                                          ; #line 19     return i;
     253      71   0004C                                                          ; -----------------------------------------------
     254      72   0004C 74FA                       mov     a, #0xFA              ; GETb1s(-6)
     255      73   0004E 75F0FF                     mov     b, #0xFF
     256      74   00051 120000                     lcall   __getb1s
                         0000320840      
     257      75   00054                                                          ; -----------------------------------------------
     258      76   00054 120000                     lcall   __return              ; RETURN(0)
                         0000480840      
     259      77   00057                                                          ; #line 20 }
     260      78   00057                                                          ; -----------------------------------------------
     261      79   00057                            end                           ; ENDSEG(2)


*** Symbols ***
name                    hex      dec          type     segment
--------------------------------------------------------------
_increment           0x0033       51          code     CodeSeg
TR1                  0x008E      142           bit     absolute
T0                   0x00B4      180           bit     absolute
ET1                  0x00AB      171           bit     absolute
SCON                 0x0098      152          data     absolute
PRH                  0x0001        1          data     absolute
IE0                  0x0089      137           bit     absolute
T1                   0x00B5      181           bit     absolute
IE1                  0x008B      139           bit     absolute
AC                   0x00D6      214           bit     absolute
SBUF                 0x0099      153          data     absolute
ARGCNT               0x000C       12          data     absolute
SM0                  0x009F      159           bit     absolute
IT0                  0x0088      136           bit     absolute
RD                   0x00B7      183           bit     absolute
PS                   0x00BC      188           bit     absolute
PCON                 0x0087      135          data     absolute
CNT                  0x0006        6          data     absolute
SRH                  0x0003        3          data     absolute
RB8                  0x009A      154           bit     absolute
REN                  0x009C      156           bit     absolute
SM1                  0x009E      158           bit     absolute
IT1                  0x008A      138           bit     absolute
P0                   0x0080      128          data     absolute
PRL                  0x0000        0          data     absolute
SM2                  0x009D      157           bit     absolute
CY                   0x00D7      215           bit     absolute
INT0                 0x00B2      178           bit     absolute
TL0                  0x008A      138          data     absolute
P1                   0x0090      144          data     absolute
BPH                  0x000B       11          data     absolute
SPH                  0x0009        9          data     absolute
TI                   0x0099      153           bit     absolute
TB8                  0x009B      155           bit     absolute
INT1                 0x00B3      179           bit     absolute
PX0                  0x00B8      184           bit     absolute
TL1                  0x008B      139          data     absolute
P2                   0x00A0      160          data     absolute
OV                   0x00D2      210           bit     absolute
PX1                  0x00BA      186           bit     absolute
P3                   0x00B0      176          data     absolute
IP                   0x00B8      184          data     absolute
DPH                  0x0083      131          data     absolute
MODFLAGREG           0x0007        7          data     absolute
SRL                  0x0002        2          data     absolute
RI                   0x0098      152           bit     absolute
RXD                  0x00B0      176           bit     absolute
TH0                  0x008C      140          data     absolute
BPL                  0x000A       10          data     absolute
SPL                  0x0008        8          data     absolute
P                    0x00D0      208           bit     absolute
PT0                  0x00B9      185           bit     absolute
TH1                  0x008D      141          data     absolute
TF0                  0x008D      141           bit     absolute
TXD                  0x00B1      177           bit     absolute
PT1                  0x00BB      187           bit     absolute
DPL                  0x0082      130          data     absolute
MDH                  0x0005        5          data     absolute
TF1                  0x008F      143           bit     absolute
WR                   0x00B6      182           bit     absolute
EX0                  0x00A8      168           bit     absolute
ACC                  0x00E0      224          data     absolute
RS0                  0x00D3      211           bit     absolute
EX1                  0x00AA      170           bit     absolute
EA                   0x00AF      175           bit     absolute
IE                   0x00A8      168          data     absolute
B                    0x00F0      240          data     absolute
_Cmain               0x0000        0          code     CodeSeg
RS1                  0x00D4      212           bit     absolute
F0                   0x00D5      213           bit     absolute
ES                   0x00AC      172           bit     absolute
SP                   0x0081      129          data     absolute
PSW                  0x00D0      208          data     absolute
MDL                  0x0004        4          data     absolute
TR0                  0x008C      140           bit     absolute
ET0                  0x00A9      169           bit     absolute
TMOD                 0x0089      137          data     absolute
TCON                 0x0088      136          data     absolute


*** Externals (Imports) ***
name                    hex      dec          type
--------------------------------------------------
__swap12             0x0000        0          code 
__div12              0x0000        0          code 
__asr12              0x0000        0          code 
__switch             0x0000        0          code 
__ugt12              0x0000        0          code 
__getb2s0            0x0000        0          code 
__getb1su            0x0000        0          code 
__sub12              0x0000        0          code 
__pushm              0x0000        0          code 
__point2s            0x0000        0          code 
__getb2su            0x0000        0          code 
__getb1pu0           0x0000        0          code 
__add12              0x0000        0          code 
__putw1s0            0x0000        0          code 
__mod12              0x0000        0          code 
__rdec1              0x0000        0          code 
__return_n           0x0000        0          code 
__returnisr          0x0000        0          code 
__uge12              0x0000        0          code 
__point1s            0x0000        0          code 
__getb1p0            0x0000        0          code 
__debug              0x0000        0          code 
__putw1s             0x0000        0          code 
__getb2su0           0x0000        0          code 
__getb1pu            0x0000        0          code 
__mul12              0x0000        0          code 
__pushp              0x0000        0          code 
__getb1su0           0x0000        0          code 
__or12               0x0000        0          code 
__call1              0x0000        0          code 
__pop2               0x0000        0          code 
__neg1               0x0000        0          code 
__putb1s0            0x0000        0          code 
__rinc1              0x0000        0          code 
__enter              0x0000        0          code 
__getw2m             0x0000        0          code 
__getb1p             0x0000        0          code 
__prtocarry          0x0000        0          code 
__dbl1               0x0000        0          code 
__pushs              0x0000        0          code 
__getw1m             0x0000        0          code 
__incwp              0x0000        0          code 
__getb2s             0x0000        0          code 
__and12              0x0000        0          code 
__pushs0             0x0000        0          code 
__pushab             0x0000        0          code 
__push1              0x0000        0          code 
__lt12               0x0000        0          code 
__ne12               0x0000        0          code 
__getw2p             0x0000        0          code 
__getb1s             0x0000        0          code 
__push2              0x0000        0          code 
__putwp1             0x0000        0          code 
__getw1p             0x0000        0          code 
__add1n              0x0000        0          code 
_ccargc              0x0000        0          code 
__udiv12             0x0000        0          code 
__asl12              0x0000        0          code 
__le12               0x0000        0          code 
__enterisr           0x0000        0          code 
__ult12              0x0000        0          code 
__pushp0             0x0000        0          code 
__getw2s             0x0000        0          code 
__getw1s0            0x0000        0          code 
__umod12             0x0000        0          code 
__putwm1             0x0000        0          code 
__eq12               0x0000        0          code 
__getw1s             0x0000        0          code 
__ule12              0x0000        0          code 
__gt12               0x0000        0          code 
__addsp              0x0000        0          code 
__umul12             0x0000        0          code 
__return             0x0000        0          code 
__getw1p0            0x0000        0          code 
__putb1s             0x0000        0          code 
__lneg1              0x0000        0          code 
__ge12               0x0000        0          code 
__getb1s0            0x0000        0          code 
__add21              0x0000        0          code 


*** Publics (Exports) ***
name                    hex      dec          type
--------------------------------------------------
_increment           0x0033       51          code 
_Cmain               0x0000        0          code 
